function checkAll(obj, ids){
	if(obj.checked){
		checkAllBox(true, ids);
    }else{
    	checkAllBox(false, ids);
    }
}

function checkAllBox(checked, ids){
	$("input[name='"+ids+"']").each(function(){$(this).prop("checked", checked);});
}

$(document).ready(function () {
	$(".formValidate").validate({
		submitHandler: function(form) {$(form).find(":button").attr("disabled", true).text("处理中...");form.submit();},
		errorPlacement: function (error, element) {
			if(element.is('input[type=checkbox]') || element.is('input[type=radio]')) {error.insertAfter(element.parent());}
			else{error.insertAfter(element);}
		}
	});
});

$.ajaxSetup({
	async: false
});

$(function () {
	$("[data-toggle='tooltip']").tooltip();
});

function getRootPath(){
    var curWwwPath=window.document.location.href;
    var pathName=window.document.location.pathname;
    var pos=curWwwPath.indexOf(pathName);
    var localhostPaht=curWwwPath.substring(0,pos);
    var projectName=pathName.substring(0,pathName.substr(1).indexOf('/')+1);
    return (localhostPaht+projectName);
}

function goHome(){
    window.location = getRootPath() + "/organize/user/index";
}
function toolTableUpdate(url,id,value){
	layer.confirm('是否'+value+'？', {offset: '250px',btn: ['确定','取消']	}, function(index){
		layer.close(index);
		$.ajax({
			type:'post',
			traditional:true,
			url:url,
			data:{
				id:id,
			},
			success:function(data){
				if(data.statusCode == '200'){
					layer.msg('操作成功',{icon: 1});
					window.location.reload();
				}else{
					layer.msg('操作失败',{icon: 2});
					window.location.reload();
				}
			}
		});
	})
}





function toolTable(url ,ids, func, value){
	if($("input[name='"+ids+"']:checked").length > 0){
		
		layer.confirm('是否确认操作？', { offset: '150px',
			  btn: ['确定','取消'] //可以无限个按钮
			  ,btn1: function(index, layero){
				  var arr = new Array();
					$("input[name='"+ids+"']:checked").each(function(){
						arr.push($(this).val());
					});
					layer.close(index);
					$.ajax({
						type:'post',
						traditional:true,
						url:url,
						data:{'ids':arr},
						success:function(data){
							if(data != ''){
								var fnc = eval(func);
								new fnc(data, fnc);
								layer.msg('操作成功',{icon: 1});
								checkAllBox(false, ids);
								window.location.reload();
							}
							else{
								layer.msg('操作失败',{icon: 2});
								window.location.reload();
							}
						}
					});
			  }
			}, function(index){
			  //按钮【按钮二】的回调
			});
		/*layer.confirm('是否确认操作？', {offset: '100px'},{btn: ['确定','取消']	}, function(index){
			
		})*/
	}
	else{
		layer.msg('请选择数据进行操作',{icon: 0});
	}
}

/**
 * 发送ajax到后台
 * @param url
 * @param func
 * @param value
 * @returns
 */
function ajaxTable(url , func, value){
		layer.confirm('是否确认操作？', { offset: '150px',
			  btn: ['确定','取消'] //可以无限个按钮
			  ,btn1: function(index, layero){
				  var arr = new Array();
					/*$("input[name='"+ids+"']:checked").each(function(){
						arr.push($(this).val());
					});*/
					layer.close(index);
					
					$.ajax({
						type:'post',
						traditional:true,
						url:url,
						data:{'ids':arr},
						success:function(data){
							if(data != ''){
								if (data==88) {
									alert('操作成功');
								}else{
									var fnc = eval(func);
									new fnc(data, fnc);
									layer.msg('操作成功',{icon: 1});
									window.location.reload();
								}
							}
							else{
								layer.msg('操作失败',{icon: 2});
								window.location.reload();
							}
						}
					});
			  }
			}, function(index){
			  //按钮【按钮二】的回调
			});

}

function formSubmit(url ,ids){
	if($("input[name='"+ids+"']:checked").length > 0){
		parent.layer.confirm('是否确认操作？', {btn: ['确定','取消']	}, function(index){
			parent.layer.close(index);
			document.forms[0].action = url;
			document.forms[0].submit();
		});
	}
	else{
		parent.layer.msg('请选择数据进行操作',{icon: 0});
	}
}

function removeToolTableTr(data, value){
	var jsonTable = null;
	var jsondata = $.parseJSON(data);
	for (var i = 0; i < jsondata.length; i++) {
		if(jsonTable == null){jsonTable = $('#toolTr_'+jsondata[i].id).parent();}
		$('#toolTr_'+jsondata[i].id).remove();
    }
	window.location.reload();
	/*if(jsonTable.find("tr").length == 0){
		window.location.reload();
	}*/
}

function passToolTable(data, value){
	var jsondata = $.parseJSON(data);
	for (var i = 0; i < jsondata.length; i++) {
		$('#label_'+jsondata[i].id).html(value).addClass("label-info").removeClass("label-warning").removeClass("label-danger");
    }
}

function rejectToolTable(data, value){
	var jsondata = $.parseJSON(data);
	for (var i = 0; i < jsondata.length; i++) {
        $('#label_'+jsondata[i].id).html(value).addClass("label-danger").removeClass("label-warning").removeClass("label-info");
    }
}

function openLayer(title, url, isRefresh){
	layer.open({
		title: title,
	    type: 2,
	    offset: '50px',
	    area: ['80%', '80%'],
	    maxmin: true,
	    content: url,
	    cancel: function(index){
	    	layer.close(index);
	    	if(isRefresh){
	    		window.location.reload();
	    	}
	    }
	});
}

function openLayerSize(title, url, isRefresh,width,height){
	layer.open({
		title: title,
	    type: 2,
	    offset: '20px',
	    area: [width, height],
	    maxmin: true,
	    content: url,
	    cancel: function(index){
	    	layer.close(index);
	    	if(isRefresh){
	    		window.location.reload();
	    	}
	    }
	});
}







var ws = null;
var funcVar = null;
function createWebSocket(url, func){
	funcVar = func;
	if ('WebSocket' in window) {
		ws = new WebSocket(updateUrl(getRootPath()) + url);
	}
	else if ('MozWebSocket' in window) {
		ws = new MozWebSocket(updateUrl(getRootPath()) + url);
	}
	else {
		ws = new SockJS(getRootPath() + '/sockjs' + url);
	}
	ws.onmessage = function (event) {
		var fnc = eval(funcVar);
		new fnc(event.data);
	};
}

function updateUrl(urlPath) {
	if (window.location.protocol == 'http:') {
		return urlPath.replace('http','ws');
	} else {
		return urlPath.replace('http','wss');
	}
}



function dateTime(startDate) {
	var mytime= new Date().getTime();
	var startDates= new Date(startDate).getTime();
	if(startDates < mytime) {
		parent.layer.msg('开始时间不能小于当前时间',{icon: 2});
		return false;
	} 
	return true;
}
